import os
import pandas as pd
import numpy as np

input_folder = r'A_daily_mean_eachcity_new'
output_folder_thresholds = r'B_Thershold_eachcity'

if not os.path.exists(output_folder_thresholds):
    os.makedirs(output_folder_thresholds)

missing_data_info = []

for city_file in os.listdir(input_folder):
    if city_file.endswith('.csv'):
        city_name = city_file.split('_air')[0]  
        file_path = os.path.join(input_folder, city_file)

        city_data = pd.read_csv(file_path, parse_dates=['date'], dayfirst=False)

        city_data_1981_2010 = city_data[
            (city_data['date'].dt.year >= 1981) &
            (city_data['date'].dt.year <= 2010) &
            (city_data['date'].dt.month >= 5) &
            (city_data['date'].dt.month <= 9)
        ]

        result_data = []

        for day in pd.date_range('1981-05-01', '1981-09-30', freq='D'):
            all_years_window_data = []
            for year in range(1981, 2011):
                current_date = pd.Timestamp(year=year, month=day.month, day=day.day)
                window_start = current_date - pd.Timedelta(days=7)
                window_end = current_date + pd.Timedelta(days=7)

                window_data = city_data_1981_2010[
                    (city_data_1981_2010['date'] >= window_start) &
                    (city_data_1981_2010['date'] <= window_end)
                ]

                if window_data.empty:
                    missing_data_info.append(f"{city_name} 缺失 {window_start.date()} 到 {window_end.date()} 的数据")
                else:
                    all_years_window_data.append(window_data)

            if all_years_window_data:
                combined_window_data = pd.concat(all_years_window_data)

                temp_data = combined_window_data['average_temperature'].dropna()
                humidity_data = combined_window_data['average_specific_humidity'].dropna()

                if len(temp_data) > 0 and len(humidity_data) > 0:
                    temp_10th = np.percentile(temp_data, 10)
                    temp_90th = np.percentile(temp_data, 90)
                    humidity_10th = np.percentile(humidity_data, 10)
                    humidity_90th = np.percentile(humidity_data, 90)
                else:
                    temp_10th = np.nan
                    temp_90th = np.nan
                    humidity_10th = np.nan
                    humidity_90th = np.nan
            else:
                temp_10th = np.nan
                temp_90th = np.nan
                humidity_10th = np.nan
                humidity_90th = np.nan

            result_data.append({
                'date': f'{day.month:02d}-{day.day:02d}', 
                'temperature_10th_percentile': temp_10th,
                'temperature_90th_percentile': temp_90th,
                'humidity_10th_percentile': humidity_10th,
                'humidity_90th_percentile': humidity_90th
            })

        result_df = pd.DataFrame(result_data)
        output_file_path = os.path.join(output_folder_thresholds, f'{city_name}_percentiles.csv')
        result_df.to_csv(output_file_path, index=False)
        